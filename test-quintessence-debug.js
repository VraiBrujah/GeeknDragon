// Test rapide pour v√©rifier l'algorithme d'optimisation
console.log('=== Test Debug Quintessence ===');

// Simuler les donn√©es de base n√©cessaires
const testProducts = {
    "coin-custom-single": {
        "name": "Pi√®ce Personnalis√©e",
        "price": 10,
        "coin_lots": { "copper": 1, "silver": 1, "electrum": 1, "gold": 1, "platinum": 1 },
        "customizable": true,
        "multipliers": [1, 10, 100, 1000, 10000],
        "category": "pieces"
    },
    "coin-quintessence-metals": {
        "name": "Quintessence M√©tallique",
        "price": 35,
        "coin_lots": { "copper": 1, "silver": 1, "electrum": 1, "gold": 1, "platinum": 1 },
        "customizable": true,
        "multipliers": [1, 10, 100, 1000, 10000],
        "category": "pieces"
    },
    "coin-trio-customizable": {
        "name": "Trio de Pi√®ces", 
        "price": 25,
        "coin_lots": { "copper": 3, "silver": 3, "electrum": 3, "gold": 3, "platinum": 3 },
        "customizable": true,
        "multipliers": [1, 10, 100, 1000, 10000],
        "category": "pieces"
    }
};

// Test: besoin de 1 de chaque m√©tal
const needs = { copper: 1, silver: 1, electrum: 1, gold: 1, platinum: 1 };

console.log('Besoins:', needs);
console.log('Produits disponibles:');
Object.keys(testProducts).forEach(id => {
    const p = testProducts[id];
    console.log(`- ${id}: ${p.name} ($${p.price})`);
});

// Calculer manuellement les options:
console.log('\n=== Analyse des options ===');

// Option 1: 5√ó Pi√®ce Personnalis√©e (10$ chacune)
console.log('Option 1: 5√ó Pi√®ce Personnalis√©e = 5 √ó $10 = $50');

// Option 2: 1√ó Quintessence M√©tallique
console.log('Option 2: 1√ó Quintessence M√©tallique = 1 √ó $35 = $35');

// Option 3: 1√ó Trio de Pi√®ces (mais √ßa donne 3 de chaque, donc trop)
console.log('Option 3: 1√ó Trio de Pi√®ces = 1 √ó $25 = $25 (mais donne 3 de chaque m√©tal = surplus)');

console.log('\nüéØ R√©sultat attendu: Quintessence M√©tallique ($35)');
console.log('Parce que $35 < $50 et couvre exactement les besoins');