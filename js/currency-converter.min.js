class CurrencyConverterPremium{constructor(){this.tauxChange={copper:1,silver:10,electrum:50,gold:100,platinum:1e3},this.multiplicateursDisponibles=[1,10,100,1e3,1e4],this.nf=new Intl.NumberFormat("fr-FR"),this.editMode=!0,this.productPrices={single:10,trio:25,septuple:50},this.sourceInputs=null,this.multiplierInputs=null,this.bestDisplay=null,this.metalCards={},this.donneesMetaux={copper:{name:"Cuivre",nameEn:"Copper",emoji:"ü™ô",color:"amber"},silver:{name:"Argent",nameEn:"Silver",emoji:"ü•à",color:"gray"},electrum:{name:"√âlectrum",nameEn:"Electrum",emoji:"‚ö°",color:"yellow"},gold:{name:"Or",nameEn:"Gold",emoji:"ü•á",color:"yellow"},platinum:{name:"Platine",nameEn:"Platinum",emoji:"üíé",color:"cyan"}},this.callbacksChangement=[],this.cacheCalculs=new Map,this.stats={conversionsTotal:0,cacheHits:0,dernierCalcul:null},this.init()}init(){this.loadProductPrices(),this.addTranslationSupport(),this.refreshDOMReferences(),this.setupEventListeners(),this.updateDisplay(),this.displayDefaultOptimalRecommendationMessage(),this.displayDefaultRecommendationMessage()}async loadProductPrices(){try{window.products&&(this.productPrices.single=window.products["coin-custom-single"]?.price||10,this.productPrices.trio=window.products["coin-trio-customizable"]?.price||25,this.productPrices.septuple=window.products["coin-septuple-free"]?.price||50)}catch(t){}}refreshDOMReferences(){const t=document.getElementById("currency-converter-premium");t&&(this.sourceInputs=t.querySelectorAll("input[data-currency]"),this.multiplierInputs=t.querySelectorAll(".multiplier-input"),this.bestDisplay=document.getElementById("currency-best"),Object.keys(this.donneesMetaux).forEach(t=>{const e=document.getElementById(`${t}-card`);e&&(this.metalCards[t]=e)}))}ajouterCallbackChangement(t){"function"==typeof t&&this.callbacksChangement.push(t)}notifierChangement(t){this.callbacksChangement.forEach(e=>{try{e(t)}catch(t){}})}getCurrentLang(){return document.documentElement.lang||"fr"}getTranslation(t,e=""){if(window.i18n){const n=t.split(".");let i=window.i18n;for(const t of n){if(!i||"object"!=typeof i||!(t in i))return e;i=i[t]}return"string"==typeof i?i:e}return e}obtenirNomMetal(t){const e=this.getCurrentLang(),n=this.donneesMetaux[t];return"en"===e?n.nameEn:n.name}setupEventListeners(){const t=document.getElementById("currency-converter-premium");if(!t)return;const e=(t,e)=>{let n;return(...i)=>{clearTimeout(n),n=setTimeout(()=>t.apply(this,i),e)}},n=e(()=>{this.mettreAJourDepuisSources(),this.notifierChangement(this.obtenirValeursActuelles())},150),i=e(()=>{this.mettreAJourDepuisMultiplicateurs(),this.notifierChangement(this.obtenirValeursActuelles())},150);t.addEventListener("input",t=>{t.target.matches("input[data-currency]")?(t.target.value=t.target.value.replace(/[^0-9]/g,""),n()):t.target.matches(".multiplier-input")&&(t.target.value=t.target.value.replace(/[^0-9]/g,""),i())},{passive:!0}),t.addEventListener("focus",t=>{t.target.matches("input[data-currency]")&&"0"===t.target.value&&(t.target.value="")},{passive:!0})}convertirMontant(t,e=this.multiplicateursDisponibles,n=!1){if(t<0)throw new Error("Le montant ne peut pas √™tre n√©gatif");if(!Array.isArray(e)||0===e.length)throw new Error("Les multiplicateurs doivent √™tre un tableau non vide");this.stats.conversionsTotal++,this.stats.dernierCalcul=new Date;const i=`${t}_${e.join("_")}_${n}`;if(this.cacheCalculs.has(i))return this.stats.cacheHits++,this.cacheCalculs.get(i);const s=this.calculerRepartitionOptimale(t,e,n);return setTimeout(()=>this.cacheCalculs.delete(i),3e5),this.cacheCalculs.set(i,s),s}calculerRepartitionOptimale(t,e,n){if(0===t)return[];if(n)return this.obtenirRepartitionUtilisateur();const i=this.findMinimalCoins(t,!1);return this.formaterSolutionStandard(i)}formaterSolutionStandard(t){return t&&0!==t.length?t.map(t=>({metal:t.currency,multiplicateur:t.multiplier,quantite:t.quantity,valeurUnitaire:this.tauxChange[t.currency]*t.multiplier,valeurTotale:this.tauxChange[t.currency]*t.multiplier*t.quantity,typeLot:t.lotType||"unitaire"})):[]}calculerTotalPieces(t){return Array.isArray(t)?t.reduce((t,e)=>t+(e.quantite||0),0):0}calculerValeurTotale(t){return Array.isArray(t)?t.reduce((t,e)=>t+(e.valeurTotale||0),0):0}formaterPourAffichage(t,e=!0){if(!Array.isArray(t)||0===t.length)return"";const n=t.map(t=>{const n=this.donneesMetaux[t.metal],i=this.obtenirNomMetal(t.metal);let s=`${this.nf.format(t.quantite)} ${n.emoji} ${i.toLowerCase()}`;return e&&1!==t.multiplicateur&&(s+=` (√ó${this.nf.format(t.multiplicateur)})`),"trio"!==t.typeLot&&"septuple"!==t.typeLot||(s+=" üì¶"),s});if(n.length>1){const t=n.pop();return`${n.join(", ")} ${this.getTranslation("shop.converter.and","et")} ${t}`}return n[0]||""}getCurrentValues(){this.sourceInputs||this.refreshDOMReferences();const t={copper:0,silver:0,electrum:0,gold:0,platinum:0},e=this.getTotalBaseValue();return this.sourceInputs&&this.sourceInputs.forEach(e=>{const{currency:n}=e.dataset,i=Math.max(0,parseInt(e.value)||0);t[n]=i}),{values:t,baseValue:e,breakdown:this.getOptimalBreakdown(e)}}obtenirValeursActuelles(){return this.getCurrentValues()}obtenirRepartitionUtilisateur(){const t=this.getUserMultiplierBreakdown();return this.formaterSolutionStandard(t)}onChange(t){this.ajouterCallbackChangement(t)}notifyChange(t){this.notifierChangement(t)}getCurrencyName(t){return this.obtenirNomMetal(t)}getTotalBaseValue(){return this.sourceInputs||this.refreshDOMReferences(),this.sourceInputs&&0!==this.sourceInputs.length?Array.from(this.sourceInputs).reduce((t,e)=>{const{currency:n}=e.dataset;return t+Math.max(0,parseInt(e.value)||0)*this.tauxChange[n]},0):0}mettreAJourDepuisSources(){const t=this.getTotalBaseValue();this.updateMultiplierTableWithOptimization(t),this.updateMetalCards(t),this.updateOptimalRecommendationsFromUser(t),this.updateOptimalLotsRecommendations(t),this.updateCoinLotsRecommendations(t,!0)}updateFromSources(){this.mettreAJourDepuisSources()}mettreAJourDepuisMultiplicateurs(){let t=0;this.multiplierInputs.forEach(e=>{const{currency:n}=e.closest("tr").dataset,i=parseInt(e.dataset.multiplier),s=parseInt(e.value.replace(/\s/g,""))||0;t+=s*this.tauxChange[n]*i}),this.sourceInputs.forEach(t=>{t.value="0"}),this.distributeOptimally(t),this.updateMetalCards(t),this.updateOptimalRecommendationsFromUser(t),this.updateOptimalLotsRecommendations(t),this.updateCoinLotsRecommendations(t,!0)}updateFromMultipliers(){this.mettreAJourDepuisMultiplicateurs()}updateMultiplierTableWithOptimization(t){if(0===t)return void this.multiplierInputs.forEach(t=>{t.value=""});const e=this.calculateOptimalMultiplierTable(t);this.multiplierInputs.forEach(t=>{t.value=""}),e.forEach(t=>{const e=Array.from(this.multiplierInputs).find(e=>{const{currency:n}=e.closest("tr").dataset,i=parseInt(e.dataset.multiplier);return n===t.currency&&i===t.multiplier});e&&t.quantity>0&&(e.value=t.quantity.toString())})}calculateOptimalMultiplierTable(t){if(0===t)return[];const e=[];Object.keys(this.tauxChange).forEach(t=>{this.multiplicateursDisponibles.forEach(n=>{e.push({currency:t,multiplier:n,value:this.tauxChange[t]*n})})}),e.sort((t,e)=>e.value-t.value);const n=[];let i=t;return e.forEach(t=>{if(i>=t.value){const e=Math.floor(i/t.value);e>0&&(n.push({currency:t.currency,multiplier:t.multiplier,quantity:e}),i-=e*t.value)}}),n}distributeOptimally(t){let e=t;["platinum","gold","electrum","silver","copper"].forEach(t=>{const n=document.querySelector(`input[data-currency="${t}"]`),i=this.tauxChange[t],s=Math.floor(e/i);s>0&&(n.value=s.toString(),e-=s*i)})}updateMetalCards(t){0!==t?Object.keys(this.tauxChange).forEach(e=>{if(!this.metalCards[e])return;const n=this.donneesMetaux[e],i=this.tauxChange[e],s=Math.floor(t/i);if(0===s)return void(this.metalCards[e].innerHTML="");const r=this.getMinimalCoinsBreakdown(s),a=t%i;let o="";a>0&&(o=this.getOptimalBreakdown(a)),this.metalCards[e].innerHTML=`\n        <div class="currency-total-card bg-gradient-to-br from-${n.color}-900/20 to-${n.color}-800/20 rounded-xl p-6 border border-${n.color}-700/30">\n          <div class="flex items-center justify-between mb-4">\n            <h6 class="text-${n.color}-300 font-bold text-lg">${n.emoji} ${this.obtenirNomMetal(e)}</h6>\n            <span class="text-2xl font-bold text-${n.color}-300">${this.nf.format(s)}</span>\n          </div>\n          \n          <div class="space-y-2 mb-4">\n            <div class="text-sm">\n              <span class="text-gray-300">${this.getTranslation("shop.converter.minimalCoins","Nombre minimal de pi√®ces")}:</span>\n            </div>\n            ${r.map(t=>`\n              <div class="flex justify-between text-sm pl-2">\n                <span class="text-gray-300">${1===t.multiplier?this.getTranslation("shop.converter.units","Unit√©s"):`Multiplicateur √ó${this.nf.format(t.multiplier)}`}:</span>\n                <span class="text-${n.color}-300 font-medium">${this.nf.format(t.quantity)}</span>\n              </div>\n            `).join("")}\n            <div class="border-t border-${n.color}-700/30 pt-2 mt-3">\n              <div class="flex justify-between text-sm">\n                <span class="text-gray-300">${this.getTranslation("shop.converter.totalCoins","Total pi√®ces")}:</span>\n                <span class="text-${n.color}-300 font-bold">${this.nf.format(r.reduce((t,e)=>t+e.quantity,0))}</span>\n              </div>\n            </div>\n          </div>\n          \n          ${o?`\n            <div class="border-t border-${n.color}-700/30 pt-3">\n              <p class="text-xs text-gray-400">${this.getTranslation("shop.converter.remainder","Reste")}: ${o}</p>\n            </div>\n          `:""}\n        </div>\n      `}):Object.keys(this.metalCards).forEach(t=>{this.metalCards[t]&&(this.metalCards[t].innerHTML="")})}getMinimalCoinsBreakdown(t){const e=[];let n=t;return this.multiplicateursDisponibles.slice().reverse().forEach(t=>{const i=Math.floor(n/t);i>0&&(e.push({multiplier:t,quantity:i}),n-=i*t)}),e}getOptimalBreakdown(t){if(t<=0)return"";const e=this.findMinimalCoins(t,!1);return e&&0!==e.length?this.formatSolutionForDisplay(e):""}findMinimalCoins(t,e=!1){let n=null,i=1/0;const s=this.findMetalPrioritySolution(t,e);if(s&&s.length>0){const t=this.calculateSolutionCost(s);t<i&&(i=t,n=s)}const r=this.findCostOptimalSolution(t,e);if(r&&r.length>0){const t=this.calculateSolutionCost(r);t<i&&(i=t,n=r)}if(!n){const e=this.findFallbackSolution(t);e&&e.length>0&&(n=e)}return n}findCostOptimalSolution(t,e=!1){const n=this.convertValueToCoins(t,e);return this.applyBulkDiscounts(n)}findMetalPrioritySolution(t,e=!1){const n=[];let i=t;if(e)return this.getUserMultiplierBreakdown();const s=[];["platinum","gold","electrum","silver","copper"].forEach(t=>{this.multiplicateursDisponibles.slice().reverse().forEach(e=>{s.push({currency:t,multiplier:e,value:this.tauxChange[t]*e})})});const r=t=>({platinum:5,gold:4,electrum:3,silver:2,copper:1}[t]||0);return s.sort((t,e)=>e.value!==t.value?e.value-t.value:r(e.currency)-r(t.currency)),s.forEach(t=>{if(i>=t.value){const e=Math.floor(i/t.value);e>0&&(n.push({currency:t.currency,multiplier:t.multiplier,quantity:e,value:t.value}),i-=e*t.value)}}),n}applyBulkDiscounts(t){const e=[];return t.forEach(t=>{const{currency:n,multiplier:i,quantity:s}=t;if(s>=7){const n=Math.floor(s/7),i=s%7;if(n>0&&e.push({...t,quantity:n,lotType:"septuple",economyGained:n*(7*this.productPrices.single-this.productPrices.septuple)}),i>=3){const n=Math.floor(i/3),s=i%3;n>0&&e.push({...t,quantity:n,lotType:"trio",economyGained:n*(3*this.productPrices.single-this.productPrices.trio)}),s>0&&e.push({...t,quantity:s,lotType:"single"})}else i>0&&e.push({...t,quantity:i,lotType:"single"})}else if(s>=3){const n=Math.floor(s/3),i=s%3;e.push({...t,quantity:n,lotType:"trio",economyGained:n*(3*this.productPrices.single-this.productPrices.trio)}),i>0&&e.push({...t,quantity:i,lotType:"single"})}else e.push({...t,lotType:"single"})}),e}calculateSolutionCost(t){return t.reduce((t,e)=>{const{quantity:n,lotType:i}=e;switch(i){case"septuple":return t+n*this.productPrices.septuple;case"trio":return t+n*this.productPrices.trio;default:return t+n*this.productPrices.single}},0)}convertValueToCoins(t,e=!1){const n=[];let i=t;const s=[];["platinum","gold","electrum","silver","copper"].forEach(t=>{this.multiplicateursDisponibles.slice().reverse().forEach(e=>{s.push({currency:t,multiplier:e,value:this.tauxChange[t]*e})})});const r=t=>({platinum:5,gold:4,electrum:3,silver:2,copper:1}[t]||0);return s.sort((t,e)=>e.value!==t.value?e.value-t.value:r(e.currency)-r(t.currency)),s.forEach(t=>{if(i>=t.value){const e=Math.floor(i/t.value);e>0&&(n.push({currency:t.currency,multiplier:t.multiplier,quantity:e,value:t.value}),i-=e*t.value)}}),n}optimizeQuantityForBulk(t,e,n){const i=this.tauxChange[e]*n;return t>=7||t>=3?{quantity:t,totalValue:t*i,hasBulkDiscount:!0}:{quantity:t,totalValue:t*i,hasBulkDiscount:!1}}addTranslationSupport(){if(window.i18n&&window.i18n.shop&&window.i18n.shop.converter){const{converter:t}=window.i18n.shop;t.cost||(t.cost="Co√ªt"),t.economy||(t.economy="√âconomie"),t.bulkDiscount||(t.bulkDiscount="Remise sur quantit√©"),t.lotType||(t.lotType="Type de lot")}}findFallbackSolution(t){const e=[];return["platinum","gold","electrum","silver","copper"].forEach(t=>{this.multiplicateursDisponibles.forEach(n=>{e.push({currency:t,multiplier:n,value:this.tauxChange[t]*n})})}),e.sort((t,e)=>e.value-t.value),this.greedyFallback(t,e)}greedyFallback(t,e){const n=[];let i=t;return e.forEach(t=>{if(i>=t.value){const e=Math.floor(i/t.value);e>0&&(n.push({...t,quantity:e}),i-=e*t.value)}}),n}balancedDistributionStrategy(t,e){const n=[];let i=t;for(const t of this.multiplicateursDisponibles.slice().reverse()){const s=["platinum","gold","electrum","silver","copper"];for(const r of s){const s=e.find(e=>e.currency===r&&e.multiplier===t);s&&i>=s.value&&(n.push({...s,quantity:1}),i-=s.value)}}if(n.reduce((t,e)=>t+e.value*e.quantity,0)/t>=.9&&n.length>=20&&t>=5e4)return i>0&&e.forEach(t=>{if(i>=t.value){const e=Math.floor(i/t.value);if(e>0){const s=n.find(e=>e.currency===t.currency&&e.multiplier===t.multiplier);s?s.quantity+=e:n.push({...t,quantity:e}),i-=e*t.value}}}),n;if(t>=1e5){const n=[];let i=t;const s=["platinum","gold","electrum","silver","copper"];for(const t of s){const s=e.find(e=>e.currency===t&&1===e.multiplier);s&&i>=s.value&&(n.push({...s,quantity:1}),i-=s.value)}for(const t of[100,1e4]){let r=!1;for(const a of s){const s=e.find(e=>e.currency===a&&e.multiplier===t);s&&i>=s.value&&(n.push({...s,quantity:1}),i-=s.value,r=!0)}if(!r)break}return e.forEach(t=>{if(i>=t.value){const e=Math.floor(i/t.value);if(e>0){const s=n.find(e=>e.currency===t.currency&&e.multiplier===t.multiplier);s?s.quantity+=e:n.push({...t,quantity:e}),i-=e*t.value}}}),n}return null}calculateRemainderPieces(t){let e=0,n=t;return["platinum","gold","electrum","silver","copper"].forEach(t=>{const i=this.tauxChange[t],s=Math.floor(n/i);s>0&&(e+=s,n-=s*i)}),e}getRemainderBreakdown(t){const e=[];let n=t;return["platinum","gold","electrum","silver"].forEach(t=>{const i=this.tauxChange[t],s=Math.floor(n/i);if(s>0){const r=this.donneesMetaux[t];e.push(`${s} ${r.emoji} ${this.obtenirNomMetal(t).toLowerCase()}`),n-=s*i}}),n>0&&e.push(`${n} ${this.donneesMetaux.copper.emoji} ${this.getCurrencyName("copper").toLowerCase()}`),e.join(", ")}formatSolutionForDisplay(t){if(!t||0===t.length)return"";const e={};t.forEach(t=>{const n=`${t.currency}_${t.multiplier}`;e[n]||(e[n]={currency:t.currency,multiplier:t.multiplier,totalQuantity:0,lotTypes:[]}),e[n].totalQuantity+=t.quantity,t.lotType&&e[n].lotTypes.push(t.lotType)});const n=Object.values(e).map(t=>{const e=this.donneesMetaux[t.currency],n=t.lotTypes.some(t=>"trio"===t||"septuple"===t)?"üì¶":"";return 1===t.multiplier?`${this.nf.format(t.totalQuantity)} ${e.emoji} ${this.obtenirNomMetal(t.currency).toLowerCase()} ${n}`:`${this.nf.format(t.totalQuantity)} ${e.emoji} ${this.obtenirNomMetal(t.currency).toLowerCase()} (√ó${this.nf.format(t.multiplier)}) ${n}`});if(n.length>1){const t=n.pop();return`${n.join(", ")} ${this.getTranslation("shop.converter.and","et")} ${t}`}return n.join("")}calculateTotalPiecesFromSolution(t){return t&&0!==t.length?t.reduce((t,e)=>t+e.quantity,0):0}calculateEconomyGained(t){return t&&0!==t.length?t.reduce((t,e)=>t+(e.economyGained||0),0):0}calculateTotalPieces(t){if(t<=0)return 0;const e=this.findMinimalCoins(t,!1);return e&&0!==e.length?this.calculateTotalPiecesFromSolution(e):0}updateCoinLotsRecommendations(t,e=!1){const n=document.getElementById("coin-lots-recommendations");n&&(n.style.display="block",0!==t?window.CoinLotOptimizer?(this.showCalculatingIndicator(),setTimeout(()=>{try{const n={};if(e){this.getUserMultiplierBreakdown().forEach(t=>{const e=`${t.currency}_${t.multiplier}`;n[e]=(n[e]||0)+t.quantity})}else{this.findMinimalCoins(t,!1).forEach(t=>{const e=`${t.currency}_${t.multiplier}`;n[e]=(n[e]||0)+t.quantity})}const i=(new window.CoinLotOptimizer).findOptimalProductCombination(n);i&&i.length>0?this.displayRecommendations(i):this.displayNoRecommendationsMessage()}catch(t){this.displayNoRecommendationsMessage()}finally{this.hideCalculatingIndicator()}},100)):this.displayNoRecommendationsMessage():this.displayDefaultRecommendationMessage())}updateOptimalLotsRecommendations(t){const e=document.getElementById("optimal-lots-recommendations");e&&(e.style.display="block",0!==t?window.CoinLotOptimizer?(this.showOptimalCalculatingIndicator(),setTimeout(()=>{try{const e={};this.findMinimalCoins(t,!1).forEach(t=>{const n=`${t.currency}_${t.multiplier}`;e[n]=(e[n]||0)+t.quantity});const n=(new window.CoinLotOptimizer).findOptimalProductCombination(e);n&&n.length>0?this.displayOptimalRecommendations(n):this.displayNoOptimalRecommendationsMessage()}catch(t){this.displayNoOptimalRecommendationsMessage()}finally{this.hideOptimalCalculatingIndicator()}},100)):this.displayNoOptimalRecommendationsMessage():this.displayDefaultOptimalRecommendationMessage())}showCalculatingIndicator(){const t=document.getElementById("coin-lots-content");if(!t)return;const e="en"===this.getCurrentLang()?"Analyzing personalized collections...":"Analyse des collections personnalis√©es...";t.innerHTML=`\n      <div class="calculating-indicator flex items-center justify-center p-8">\n        <div class="text-center">\n          <div class="mb-4">\n            <div class="w-8 h-8 border-4 border-green-400 border-t-transparent rounded-full animate-spin mx-auto"></div>\n          </div>\n          <p class="text-green-300 font-medium">${e}</p>\n          <div class="flex justify-center mt-2 space-x-1">\n            <div class="w-2 h-2 bg-green-400 rounded-full animate-pulse"></div>\n            <div class="w-2 h-2 bg-green-400 rounded-full animate-pulse" style="animation-delay: 0.2s"></div>\n            <div class="w-2 h-2 bg-green-400 rounded-full animate-pulse" style="animation-delay: 0.4s"></div>\n          </div>\n        </div>\n      </div>\n    `}displayDefaultRecommendationMessage(){const t=document.getElementById("coin-lots-content"),e=document.getElementById("add-all-lots-to-cart");if(t){const e=this.getTranslation("money.converter.lotsRecommendations.promptMessage","D√©finissez votre tr√©sor dans le convertisseur"),n=this.getTranslation("money.converter.lotsRecommendations.promptSubMessage","pour d√©couvrir vos collections personnalis√©es");t.innerHTML=`\n        <div class="text-center py-8">\n          <div class="w-16 h-16 bg-green-600/20 rounded-full flex items-center justify-center mx-auto mb-4">\n            <div class="w-8 h-8 bg-green-500/50 rounded-full"></div>\n          </div>\n          <p class="text-gray-300 text-sm mb-2">${e}</p>\n          <p class="text-gray-400 text-xs">${n}</p>\n        </div>\n      `}e&&(e.style.display="none")}displayNoRecommendationsMessage(){const t=document.getElementById("coin-lots-content"),e=document.getElementById("add-all-lots-to-cart");if(t){const e=this.getTranslation("money.converter.lotsRecommendations.noLotsMessage","Aucune collection disponible."),n=this.getTranslation("money.converter.lotsRecommendations.noLotsSubMessage","Modifiez votre tr√©sor pour d√©couvrir de nouvelles options");t.innerHTML=`\n        <div class="text-center py-8">\n          <div class="w-16 h-16 bg-gray-600/20 rounded-full flex items-center justify-center mx-auto mb-4">\n            <div class="w-8 h-8 border-2 border-gray-500/50 rounded-full border-dashed"></div>\n          </div>\n          <p class="text-gray-300 text-sm mb-2">${e}</p>\n          <p class="text-gray-400 text-xs">${n}</p>\n        </div>\n      `}e&&(e.style.display="none")}displayRecommendations(t){const e=document.getElementById("coin-lots-content"),n=document.getElementById("add-all-lots-to-cart");if(!e)return;this.getCurrentLang();let i='<div class="space-y-4">',s=0;t.forEach((t,e)=>{const n=t.totalCost||t.price*t.quantity;s+=n,i+=`\n        <div class="bg-gray-800/50 rounded-lg p-4 border border-gray-600/30">\n          <div class="flex justify-between items-center">\n            <div class="flex-1">\n              <h6 class="font-medium text-gray-200">${t.displayName}</h6>\n              <p class="text-sm text-gray-400">Quantit√©: ${t.quantity}</p>\n            </div>\n            <div class="text-right">\n              <p class="font-bold text-green-400">$${n.toFixed(2)}</p>\n              <p class="text-xs text-gray-400">$${t.price.toFixed(2)} / unit√©</p>\n            </div>\n          </div>\n        </div>\n      `}),i+=`\n      <div class="border-t border-gray-600/30 pt-4">\n        <div class="flex justify-between items-center text-lg font-bold">\n          <span class="text-gray-200">Total:</span>\n          <span class="text-green-400">$${s.toFixed(2)}</span>\n        </div>\n      </div>\n    </div>`,e.innerHTML=i,n&&(n.style.display="block",n.dataset.lotsData=JSON.stringify(t))}hideCalculatingIndicator(){}showOptimalCalculatingIndicator(){const t=document.getElementById("optimal-lots-content");if(!t)return;const e="en"===this.getCurrentLang()?"Analyzing optimal forging combinations...":"Analyse des combinaisons de forge optimales...";t.innerHTML=`\n      <div class="calculating-indicator flex items-center justify-center p-8">\n        <div class="text-center">\n          <div class="mb-4">\n            <div class="w-8 h-8 border-4 border-purple-400 border-t-transparent rounded-full animate-spin mx-auto"></div>\n          </div>\n          <p class="text-purple-300 font-medium">${e}</p>\n          <div class="flex justify-center mt-2 space-x-1">\n            <div class="w-2 h-2 bg-purple-400 rounded-full animate-pulse"></div>\n            <div class="w-2 h-2 bg-purple-400 rounded-full animate-pulse" style="animation-delay: 0.2s"></div>\n            <div class="w-2 h-2 bg-purple-400 rounded-full animate-pulse" style="animation-delay: 0.4s"></div>\n          </div>\n        </div>\n      </div>\n    `}displayDefaultOptimalRecommendationMessage(){const t=document.getElementById("optimal-lots-content"),e=document.getElementById("add-all-optimal-lots-to-cart");if(t){const e=this.getTranslation("money.converter.optimalLots.promptMessage","Configurez votre tr√©sor dans le convertisseur"),n=this.getTranslation("money.converter.optimalLots.promptSubMessage","pour d√©couvrir les collections les plus efficaces");t.innerHTML=`\n        <div class="text-center py-8">\n          <div class="w-16 h-16 bg-purple-600/20 rounded-full flex items-center justify-center mx-auto mb-4">\n            <div class="w-8 h-8 bg-purple-500/50 rounded-full"></div>\n          </div>\n          <p class="text-gray-300 text-sm mb-2">${e}</p>\n          <p class="text-gray-400 text-xs">${n}</p>\n        </div>\n      `}e&&(e.style.display="none")}displayNoOptimalRecommendationsMessage(){const t=document.getElementById("optimal-lots-content"),e=document.getElementById("add-all-optimal-lots-to-cart");if(t){const e=this.getTranslation("money.converter.optimalLots.noLotsMessage","Aucune solution optimale disponible."),n=this.getTranslation("money.converter.optimalLots.noLotsSubMessage","Ajustez votre tr√©sor pour explorer d'autres configurations");t.innerHTML=`\n        <div class="text-center py-8">\n          <div class="w-16 h-16 bg-gray-600/20 rounded-full flex items-center justify-center mx-auto mb-4">\n            <div class="w-8 h-8 border-2 border-gray-500/50 rounded-full border-dashed"></div>\n          </div>\n          <p class="text-gray-300 text-sm mb-2">${e}</p>\n          <p class="text-gray-400 text-xs">${n}</p>\n        </div>\n      `}e&&(e.style.display="none")}displayOptimalRecommendations(t){const e=document.getElementById("optimal-lots-content"),n=document.getElementById("add-all-optimal-lots-to-cart");if(!e)return;this.getCurrentLang();let i='<div class="space-y-4">',s=0;t.forEach((t,e)=>{const n=t.totalCost||t.price*t.quantity;s+=n,i+=`\n        <div class="bg-purple-800/30 rounded-lg p-4 border border-purple-600/40">\n          <div class="flex justify-between items-center">\n            <div class="flex-1">\n              <h6 class="font-medium text-gray-200">${t.displayName}</h6>\n              <p class="text-sm text-gray-400">Quantit√©: ${t.quantity}</p>\n            </div>\n            <div class="text-right">\n              <p class="font-bold text-purple-400">$${n.toFixed(2)}</p>\n              <p class="text-xs text-gray-400">$${t.price.toFixed(2)} / unit√©</p>\n            </div>\n          </div>\n        </div>\n      `}),i+=`\n      <div class="border-t border-purple-600/30 pt-4">\n        <div class="flex justify-between items-center text-lg font-bold">\n          <span class="text-gray-200">Total optimal:</span>\n          <span class="text-purple-400">$${s.toFixed(2)}</span>\n        </div>\n      </div>\n    </div>`,e.innerHTML=i,n&&(n.style.display="block",n.dataset.lotsData=JSON.stringify(t))}hideOptimalCalculatingIndicator(){}updateDisplay(){this.updateFromSources()}destroy(){const t=document.getElementById("currency-converter-premium");if(t){const e=t.cloneNode(!0);t.parentNode.replaceChild(e,t)}}viderCache(){this.cacheCalculs.clear(),this.stats.cacheHits=0}obtenirStatistiques(){return{...this.stats,tailleCache:this.cacheCalculs.size,tauxCacheHit:this.stats.conversionsTotal>0?`${(this.stats.cacheHits/this.stats.conversionsTotal*100).toFixed(2)}%`:"0%"}}reinitialiserStatistiques(){this.stats={conversionsTotal:0,cacheHits:0,dernierCalcul:null}}validerDonnees(t,e){switch(e){case"number":return"number"==typeof t&&!isNaN(t)&&t>=0;case"array":return Array.isArray(t)&&t.length>0;case"repartition":return Array.isArray(t)&&t.every(t=>t.metal&&"number"==typeof t.multiplicateur&&"number"==typeof t.quantite);default:return!1}}getUserMultiplierBreakdown(){this.multiplierInputs||this.refreshDOMReferences();const t=[];return this.multiplierInputs&&this.multiplierInputs.forEach(e=>{const{currency:n}=e.closest("tr").dataset,i=parseInt(e.dataset.multiplier),s=parseInt(e.value.replace(/\s/g,""))||0;s>0&&t.push({currency:n,multiplier:i,quantity:s,value:this.tauxChange[n]*i})}),t}formatBreakdownText(t){if(!t||0===t.length)return"";const e=t.map(t=>{const e=this.donneesMetaux[t.currency];return`${this.nf.format(t.quantity)} ${e.emoji} ${this.obtenirNomMetal(t.currency).toLowerCase()} (√ó${this.nf.format(t.multiplier)})`});if(e.length>1){const t=e.pop();return`${e.join(", ")} ${this.getTranslation("shop.converter.and","et")} ${t}`}return e.join("")}updateOptimalRecommendationsFromUser(t){if(this.bestDisplay||this.refreshDOMReferences(),!this.bestDisplay)return;if(0===t){const t=this.getTranslation("shop.converter.enterAmounts","Entrez des montants pour voir les recommandations optimales");return void(this.bestDisplay.innerHTML=t)}const e=this.getUserMultiplierBreakdown(),n=e.reduce((t,e)=>t+e.quantity,0),i=this.findMinimalCoins(t,!1),s=i?i.reduce((t,e)=>t+e.quantity,0):1/0;let r,a,o;n>0&&n<=s?(r=e,a=n,o="user"):i?(r=i,a=s,o="algorithm"):(r=e.length>0?e:[],a=n,o="user");const l=this.formatSolutionForDisplay(r),c="user"===o?'<span class="text-blue-600">‚úèÔ∏è</span>':'<span class="text-green-600">ü§ñ</span>',u=Math.floor(t/this.tauxChange.gold),p=t%this.tauxChange.gold;let d="";if(u>0){if(d=`${this.nf.format(u)} ü•á ${this.getCurrencyName("gold").toLowerCase()}`,p>0){const t=this.getOptimalBreakdown(p);d+=` ${this.getTranslation("shop.converter.and","et")} ${t}`}}else d=this.getOptimalBreakdown(t);const m=this.getTranslation("shop.converter.optimalConversion","Conversion optimale"),h=this.getTranslation("shop.converter.total","Total"),y=this.getTranslation("shop.converter.value","Valeur");this.bestDisplay.innerHTML=`\n      <div class="text-center">\n        <p class="text-lg mb-2"><strong>${m}:</strong> ${c}</p>\n        <p class="text-indigo-300 font-medium mb-2">${l}</p>\n        <p class="text-sm text-gray-400">${h}: ${this.nf.format(a)} ${this.getTranslation("shop.converter.coins","pi√®ces")}</p>\n        <p class="text-sm text-gray-400"><br>${y}: ${d}</p>\n      </div>\n    `}}window.addEventListener("beforeunload",()=>{window.converterInstance&&"function"==typeof window.converterInstance.destroy&&window.converterInstance.destroy()});let converterInitialized=!1;const initConverter=()=>{converterInitialized||(converterInitialized=!0,setTimeout(()=>{document.getElementById("currency-converter-premium")&&(window.converterInstance=new CurrencyConverterPremium,window.currencyConverter=window.converterInstance)},100))};document.addEventListener("DOMContentLoaded",()=>{const t=document.getElementById("currency-converter-premium");if(!t)return;const e=new IntersectionObserver(t=>{t.forEach(t=>{t.isIntersecting&&(initConverter(),e.disconnect())})},{threshold:.1});e.observe(t),["click","scroll","touchstart"].forEach(t=>{document.addEventListener(t,()=>{setTimeout(initConverter,500)},{once:!0,passive:!0})})});