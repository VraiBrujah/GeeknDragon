class DnDMusicPlayer{constructor(){this.audio=new Audio,this.playlist=[],this.initPlaylist=[],this.weightedPlaylist=[],this.currentIndex=0,this.isPlaying=!1,this.volume=.15,this.shuffle=!0,this.isInitialized=!1,this.firstInteraction=!0,this.heroIntroPath=null,this.firstPlayCompleted=!1,this.lastPlaylistUpdate=0,this.playlistCacheTimeout=3e4,this.startMusicHandler=()=>this.markUserInteraction(),this.initializePlayer(),this.setupEventListeners()}getTranslation(t,i=""){if(window.i18n){const e=t.split(".");let s=window.i18n;for(const t of e)if(s=s?.[t],void 0===s)break;return"string"==typeof s?s:i}return i}async initializePlayer(){try{await this.loadPlaylist(),this.setupAudioElement(),this.createPlayerInterface(),this.isInitialized=!0}catch(t){}}async loadPlaylist(t=!1){const i=Date.now();if(t||!(i-this.lastPlaylistUpdate<this.playlistCacheTimeout))try{const t=await fetch("/api/music-scanner.php?t="+i);if(!t.ok)throw new Error("Erreur chargement playlist");const e=await t.json(),s=e.files||[],a=e.initFiles||[],n=JSON.stringify(this.playlist)!==JSON.stringify(s);this.playlist=s,this.initPlaylist=a,this.heroIntroPath=e.heroIntro,this.lastPlaylistUpdate=i,!n&&this.weightedPlaylist.length||this.createWeightedPlaylist(),n&&console.log(`Playlist mise à jour: ${this.playlist.length} pistes trouvées (dont ${this.initPlaylist.length} dans init/)`)}catch(t){console.warn("Échec chargement playlist API, utilisation fallback"),this.playlist=await this.createFallbackPlaylist(),this.initPlaylist=[],this.heroIntroPath="media/musique/init/hero-intro.mp3",this.createWeightedPlaylist()}}async createFallbackPlaylist(){const t=["media/musique/init/hero-intro.mp3","media/musique/Adgon.mp3","media/musique/La saga de Diancastraa.mp3"],i=[];for(const e of t)try{if((await fetch(`/${e}`,{method:"HEAD"})).ok){const t=e.split("/").pop().replace(".mp3",""),s=e.includes("/init/");i.push({path:e,name:t,isInit:s})}}catch(t){}return i}createWeightedPlaylist(){this.weightedPlaylist=[],!this.firstPlayCompleted&&this.initPlaylist.length>0?this.initPlaylist.forEach(t=>{this.weightedPlaylist.push(t)}):this.playlist.forEach(t=>{this.weightedPlaylist.push(t)}),this.shuffleArray(this.weightedPlaylist)}setupAudioElement(){this.audio.volume=this.volume,this.audio.preload="none",this.audio.addEventListener("ended",()=>{this.firstPlayCompleted||(this.firstPlayCompleted=!0,this.createWeightedPlaylist()),this.playNext()}),this.audio.addEventListener("error",t=>{this.playNext()}),this.audio.addEventListener("canplaythrough",()=>{this.updatePlayButton()}),this.audio.addEventListener("timeupdate",()=>{this.updateStatusIndicator()})}createPlayerInterface(){const t=document.getElementById("dnd-music-player");t&&t.remove();const i=`\n            <div id="dnd-music-player" class="music-player-container">\n                <div class="music-player">\n                    <div class="music-status-indicator"></div>\n                    \n                    <div class="music-volume-container">\n                        <button id="music-mute" class="music-btn volume-btn" title="${this.getTranslation("ui.musicPlayer.volume","Volume")}">\n                            <svg class="volume-icon" viewBox="0 0 24 24" fill="currentColor">\n                                <path d="M3 9v6h4l5 5V4L7 9H3zm13.5 3A4.5 4.5 0 0 0 14 7.97v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77 0-4.28-2.99-7.86-7-8.77z"/>\n                            </svg>\n                            <svg class="mute-icon hidden" viewBox="0 0 24 24" fill="currentColor">\n                                <path d="M16.5 12A4.5 4.5 0 0 0 14 7.97v2.21l2.45 2.45c.03-.2.05-.41.05-.63zm2.5 0c0 .94-.2 1.82-.54 2.64l1.51 1.51A8.796 8.796 0 0 0 21 12c0-4.28-2.99-7.86-7-8.77v2.06c2.89.86 5 3.54 5 6.71zM4.27 3L3 4.27 7.73 9H3v6h4l5 5v-6.73l4.25 4.25c-.67.52-1.42.93-2.25 1.18v2.06a8.99 8.99 0 0 0 3.69-1.81L19.73 21 21 19.73l-9-9L4.27 3zM12 4L9.91 6.09 12 8.18V4z"/>\n                            </svg>\n                        </button>\n                        <input type="range" id="music-volume" class="volume-slider" min="0" max="100" value="15">\n                    </div>\n                    \n                    <div class="music-controls">\n                        <button id="music-prev" class="music-btn" title="${this.getTranslation("ui.musicPlayer.previous","Précédent")}">\n                            <svg viewBox="0 0 24 24" fill="currentColor">\n                                <path d="M6 6h2v12H6zm3.5 6l8.5 6V6z"/>\n                            </svg>\n                        </button>\n                        <button id="music-play-pause" class="music-btn play-pause-btn" title="${this.getTranslation("ui.musicPlayer.playPause","Lecture / Pause")}">\n                            <svg class="play-icon" viewBox="0 0 24 24" fill="currentColor">\n                                <path d="M8 5v14l11-7z"/>\n                            </svg>\n                            <svg class="pause-icon hidden" viewBox="0 0 24 24" fill="currentColor">\n                                <path d="M6 19h4V5H6v14zm8-14v14h4V5h-4z"/>\n                            </svg>\n                        </button>\n                        <button id="music-next" class="music-btn" title="${this.getTranslation("ui.musicPlayer.next","Suivant")}">\n                            <svg viewBox="0 0 24 24" fill="currentColor">\n                                <path d="M6 18l8.5-6L6 6v12zM16 6v12h2V6h-2z"/>\n                            </svg>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        `,e=document.querySelector(".hero-section"),s=document.querySelector("main")||document.body;e?e.insertAdjacentHTML("afterend",i):s.insertAdjacentHTML("afterbegin",i),this.bindControlEvents()}bindControlEvents(){document.getElementById("music-play-pause").addEventListener("click",()=>{this.togglePlayPause()}),document.getElementById("music-prev").addEventListener("click",()=>{this.playPrevious()}),document.getElementById("music-next").addEventListener("click",()=>{this.playNext()});const t=document.getElementById("music-volume");t.addEventListener("input",t=>{this.setVolume(t.target.value/100)}),t.addEventListener("mousedown",()=>{this.markUserInteraction()}),t.addEventListener("touchstart",()=>{this.markUserInteraction()}),document.getElementById("music-mute").addEventListener("click",()=>{this.toggleMute()})}setupEventListeners(){document.addEventListener("click",this.startMusicHandler,!0),document.addEventListener("keydown",this.startMusicHandler,!0),document.addEventListener("touchstart",this.startMusicHandler,!0),document.addEventListener("wheel",this.startMusicHandler,{passive:!0,capture:!0}),document.addEventListener("scroll",this.startMusicHandler,{passive:!0,capture:!0}),document.addEventListener("touchmove",this.startMusicHandler,{passive:!0,capture:!0})}markUserInteraction(){this.firstInteraction&&this.isInitialized&&(this.firstInteraction=!1,document.removeEventListener("click",this.startMusicHandler,!0),document.removeEventListener("keydown",this.startMusicHandler,!0),document.removeEventListener("touchstart",this.startMusicHandler,!0),document.removeEventListener("wheel",this.startMusicHandler,!0),document.removeEventListener("scroll",this.startMusicHandler,!0),document.removeEventListener("touchmove",this.startMusicHandler,!0),this.startPlayback())}async startPlayback(){if(this.playlist.length)if(!this.firstPlayCompleted&&this.initPlaylist.length>0){const t=Math.floor(Math.random()*this.initPlaylist.length),i=this.initPlaylist[t];this.currentIndex=this.playlist.findIndex(t=>t.path===i.path),await this.loadCurrentTrack(),await this.play()}else this.isPlaying=!0,await this.playNext()}async loadCurrentTrack(){if(!this.playlist[this.currentIndex])return;const t=this.playlist[this.currentIndex];this.audio.src=`/${t.path}`;try{this.audio.load()}catch(t){}}async play(){try{await this.audio.play(),this.isPlaying=!0,this.updatePlayButton()}catch(t){this.playNext()}}pause(){this.audio.pause(),this.isPlaying=!1,this.updatePlayButton()}async togglePlayPause(){this.firstInteraction?this.markUserInteraction():this.isPlaying?this.pause():(this.audio.src&&""!==this.audio.src||await this.loadCurrentTrack(),await this.play())}async playNext(){this.firstPlayCompleted&&this.weightedPlaylist.length!==this.playlist.length&&this.createWeightedPlaylist();const t=this.isPlaying;if(this.shuffle){const t=Math.floor(Math.random()*this.weightedPlaylist.length),i=this.weightedPlaylist[t];this.currentIndex=this.playlist.findIndex(t=>t.path===i.path)}else this.currentIndex=(this.currentIndex+1)%this.playlist.length;await this.loadCurrentTrack(),t&&await this.play()}async playPrevious(){if(this.audio.currentTime>3)this.audio.currentTime=0;else{const t=this.isPlaying;this.currentIndex=this.currentIndex>0?this.currentIndex-1:this.playlist.length-1,await this.loadCurrentTrack(),t&&await this.play()}}setVolume(t){this.volume=Math.max(0,Math.min(1,t)),this.audio.volume=this.volume,this.updateVolumeDisplay()}toggleMute(){this.audio.volume>0?(this.audio.volume=0,document.querySelector(".volume-icon").classList.add("hidden"),document.querySelector(".mute-icon").classList.remove("hidden")):(this.audio.volume=this.volume,document.querySelector(".volume-icon").classList.remove("hidden"),document.querySelector(".mute-icon").classList.add("hidden"))}updatePlayButton(){const t=document.querySelector(".play-icon"),i=document.querySelector(".pause-icon");this.isPlaying?(t.classList.add("hidden"),i.classList.remove("hidden")):(t.classList.remove("hidden"),i.classList.add("hidden")),this.updateStatusIndicator()}updateStatusIndicator(){const t=document.querySelector(".music-status-indicator");t&&(this.isPlaying?t.classList.remove("paused"):t.classList.add("paused"))}updateVolumeDisplay(){const t=document.getElementById("music-volume");t&&(t.value=100*this.volume)}shuffleArray(t){for(let i=t.length-1;i>0;i--){const e=Math.floor(Math.random()*(i+1));[t[i],t[e]]=[t[e],t[i]]}return t}}window.dndMusicPlayer=null,document.addEventListener("DOMContentLoaded",()=>{window.dndMusicPlayer||(window.dndMusicPlayer=new DnDMusicPlayer)});