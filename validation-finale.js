/**
 * VALIDATION FINALE DU CALCULATEUR DYNAMIQUE
 * Script de test pour s'assurer que tout fonctionne correctement
 */

// Tests √† ex√©cuter dans la console du navigateur
console.log('üß™ D√âMARRAGE VALIDATION FINALE - CALCULATEUR DYNAMIQUE');

// V√©rification que le calculateur est charg√©
if (typeof window.dynamicRecommender !== 'undefined') {
    console.log('‚úÖ Calculateur dynamique d√©tect√©');
    
    // Test 1: Cas simple
    console.log('\nüîç Test 1: Cas simple (1 cuivre)');
    const test1 = window.dynamicRecommender.findOptimalLots({
        copper: 1, silver: 0, electrum: 0, gold: 0, platinum: 0
    });
    
    if (test1 && test1.length > 0) {
        console.log(`‚úÖ R√©sultat: ${test1.length} recommandation(s)`);
        test1.forEach(rec => console.log(`   - ${rec.productName}: ${rec.price}‚Ç¨`));
    } else {
        console.log('‚ùå Aucune recommandation trouv√©e');
    }
    
    // Test 2: Cas moyen
    console.log('\nüîç Test 2: Cas moyen (mix m√©taux)');
    const test2 = window.dynamicRecommender.findOptimalLots({
        copper: 5, silver: 3, electrum: 2, gold: 1, platinum: 1
    });
    
    if (test2 && test2.length > 0) {
        console.log(`‚úÖ R√©sultat: ${test2.length} recommandation(s)`);
        const totalCost = test2.reduce((sum, rec) => sum + (rec.price * rec.quantity), 0);
        console.log(`   üí∞ Co√ªt total: ${totalCost.toFixed(2)}‚Ç¨`);
    } else {
        console.log('‚ùå Aucune recommandation trouv√©e');
    }
    
    // Test 3: Performance
    console.log('\n‚è±Ô∏è Test 3: Performance');
    const startTime = performance.now();
    const test3 = window.dynamicRecommender.findOptimalLots({
        copper: 25, silver: 15, electrum: 10, gold: 5, platinum: 3
    });
    const endTime = performance.now();
    
    console.log(`‚úÖ Temps d'ex√©cution: ${(endTime - startTime).toFixed(2)}ms`);
    
    // Test 4: Cache
    console.log('\nüîÑ Test 4: Cache');
    const cacheSize = window.dynamicRecommender.cache.size;
    console.log(`‚úÖ Entr√©es en cache: ${cacheSize}`);
    
    // Test 5: Produits charg√©s
    console.log('\nüì¶ Test 5: Produits charg√©s');
    const productCount = Object.keys(window.dynamicRecommender.products || {}).length;
    console.log(`‚úÖ Produits de pi√®ces: ${productCount}`);
    
    console.log('\nüéâ VALIDATION FINALE TERMIN√âE');
    console.log('Tous les tests de base sont pass√©s avec succ√®s !');
    
} else {
    console.log('‚ùå Calculateur dynamique NON TROUV√â');
    console.log('V√©rifiez que le script dynamic-coin-recommender.js est charg√©');
}

// Instructions pour ex√©cution manuelle
console.log('\nüìã INSTRUCTIONS MANUELLES:');
console.log('1. Ouvrez aide-jeux.php dans votre navigateur');
console.log('2. Ouvrez la console d√©veloppeur (F12)');
console.log('3. Collez ce script et appuyez sur Entr√©e');
console.log('4. V√©rifiez que tous les tests affichent ‚úÖ');