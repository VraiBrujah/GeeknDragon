# EDS Database Module - Infrastructure Locale
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: eds-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: trackingbms
      POSTGRES_USER: eds_admin
      POSTGRES_PASSWORD: eds_secure_2025
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - eds-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U eds_admin -d trackingbms"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Redis Cache & Message Bus
  redis:
    image: redis:7-alpine
    container_name: eds-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass eds_redis_2025
    volumes:
      - redis_data:/data
    networks:
      - eds-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # pgBouncer Connection Pool
  pgbouncer:
    image: pgbouncer/pgbouncer:latest
    container_name: eds-pgbouncer
    restart: unless-stopped
    environment:
      DATABASES_HOST: postgres
      DATABASES_PORT: 5432
      DATABASES_USER: eds_admin
      DATABASES_PASSWORD: eds_secure_2025
      DATABASES_DBNAME: trackingbms
      POOL_MODE: transaction
      MAX_CLIENT_CONN: 200
      DEFAULT_POOL_SIZE: 25
      MAX_DB_CONNECTIONS: 50
    ports:
      - "6432:5432"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - eds-network

  # Supabase Local (Option 1 - Recommand√©e)
  supabase-studio:
    image: supabase/studio:latest
    container_name: eds-supabase-studio
    restart: unless-stopped
    environment:
      SUPABASE_URL: http://supabase-kong:8000
      STUDIO_PG_META_URL: http://supabase-meta:8080
    ports:
      - "3000:3000"
    depends_on:
      - supabase-kong
      - supabase-meta
    networks:
      - eds-network

  supabase-kong:
    image: kong:2.8-alpine
    container_name: eds-supabase-kong
    restart: unless-stopped
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /var/lib/kong/kong.yml
      KONG_DNS_ORDER: LAST,A,CNAME
      KONG_PLUGINS: request-transformer,cors,key-auth,acl,basic-auth
    ports:
      - "8000:8000"
    volumes:
      - ./supabase/kong.yml:/var/lib/kong/kong.yml
    networks:
      - eds-network

  supabase-auth:
    image: supabase/gotrue:latest
    container_name: eds-supabase-auth
    restart: unless-stopped
    environment:
      GOTRUE_API_HOST: 0.0.0.0
      GOTRUE_API_PORT: 9999
      API_EXTERNAL_URL: http://localhost:8000
      GOTRUE_URL: http://localhost:8000
      PORT: 9999
      GOTRUE_JWT_SECRET: your-super-secret-jwt-token-with-at-least-32-characters-long
      GOTRUE_JWT_EXP: 3600
      GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
      GOTRUE_JWT_ADMIN_GROUP_NAME: supabase_admin
      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DB_DATABASE_URL: postgres://eds_admin:eds_secure_2025@postgres:5432/trackingbms?sslmode=disable
      GOTRUE_SITE_URL: http://localhost:3000
      GOTRUE_EXTERNAL_EMAIL_ENABLED: true
      GOTRUE_MAILER_AUTOCONFIRM: true
      GOTRUE_SMTP_ADMIN_EMAIL: admin@edsquebec.com
      GOTRUE_SMTP_HOST: mailhog
      GOTRUE_SMTP_PORT: 1025
      GOTRUE_SMTP_USER: ""
      GOTRUE_SMTP_PASS: ""
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - eds-network

  supabase-rest:
    image: postgrest/postgrest:latest
    container_name: eds-supabase-rest
    restart: unless-stopped
    environment:
      PGRST_DB_URI: postgres://eds_admin:eds_secure_2025@postgres:5432/trackingbms
      PGRST_DB_SCHEMAS: public
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: your-super-secret-jwt-token-with-at-least-32-characters-long
      PGRST_DB_USE_LEGACY_GUCS: "false"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - eds-network

  supabase-realtime:
    image: supabase/realtime:latest
    container_name: eds-supabase-realtime
    restart: unless-stopped
    environment:
      PORT: 4000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: eds_admin
      DB_PASSWORD: eds_secure_2025
      DB_NAME: trackingbms
      DB_AFTER_CONNECT_QUERY: 'SET search_path TO _realtime'
      DB_ENC_KEY: supabaserealtime
      API_JWT_SECRET: your-super-secret-jwt-token-with-at-least-32-characters-long
      FLY_ALLOC_ID: fly123
      FLY_APP_NAME: realtime
      SECRET_KEY_BASE: UpNVntn3cDxHJpq99YMc1T1AQgQpc8kfYTuRgBiYa15BLrx8etQoXz3gZkx6
      ERL_AFLAGS: -proto_dist inet_tcp
      ENABLE_TAILSCALE: "false"
      DNS_NODES: "''"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - eds-network

  supabase-meta:
    image: supabase/postgres-meta:latest
    container_name: eds-supabase-meta
    restart: unless-stopped
    environment:
      PG_META_PORT: 8080
      PG_META_DB_HOST: postgres
      PG_META_DB_PORT: 5432
      PG_META_DB_NAME: trackingbms
      PG_META_DB_USER: eds_admin
      PG_META_DB_PASSWORD: eds_secure_2025
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - eds-network

  # Mail Server (Development)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: eds-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - eds-network

  # Module EDS Database API
  eds-database-api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: eds-database-api
    restart: unless-stopped
    environment:
      # Database
      DATABASE_URL: postgresql://eds_admin:eds_secure_2025@pgbouncer:5432/trackingbms
      DATABASE_POOL_SIZE: 20
      DATABASE_MAX_OVERFLOW: 30
      
      # Supabase
      SUPABASE_URL: http://supabase-kong:8000
      SUPABASE_ANON_KEY: your-anon-key-here
      SUPABASE_SERVICE_KEY: your-service-role-key-here
      
      # Redis
      REDIS_URL: redis://:eds_redis_2025@redis:6379
      
      # Security
      JWT_SECRET_KEY: your-super-secret-jwt-token-with-at-least-32-characters-long
      JWT_ALGORITHM: HS256
      JWT_ACCESS_TOKEN_EXPIRE_MINUTES: 30
      
      # API
      API_HOST: 0.0.0.0
      API_PORT: 8001
      API_ENV: development
      API_DEBUG: true
      
      # Logging
      LOG_LEVEL: INFO
      
    ports:
      - "8001:8001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      pgbouncer:
        condition: service_started
    networks:
      - eds-network
    volumes:
      - ../src:/app/src
      - ../tests:/app/tests
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  eds-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16